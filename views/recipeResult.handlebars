<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Recipe</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" media="screen" href="/css/style.min.css" />
    <script src="/js/jquery-3.3.1.min.js"></script>
    <script src="/js/js-cookie.js"></script>
    <script src="/js/recipeResult.js"></script>
    <script src="/js/vue.js"></script>
    <script src="/js/canvasjs.min.js"></script>

</head>

<body>
    <header>
        <div id="brandBox">
            <img onclick="window.location='kitchen'" id="logo" src="/img/logo.png" alt="logo" style="width:50px;height:31px;" />
            <p id="appName">
                <span style="color: #EA4622">Pan</span><span style="color: #9fd8e2">tr</span><span style="color: #F2847A">y</span>
            </p>
        </div>
        <div id="accountBox" onclick="window.location='account'">
            <p>Hello,
                <span id="accountBoxUserName">userName</span>
            </p>
            <img id="avatarImg" src="/img/avatar.png" alt="avatar" style="width:35px; height:35px" />
        </div>
    </header>

    <div class="content">
        <div id="recipe">
            <button class="backBtn" onclick="window.location='recipeList'" v-on:click="clearID">back</button>

            <div id="recipeInfo">
                <h1>\{{title}}</h1>
                <div class="titleBlock">
                    <div class="titleBlockLeft">
                        <div style="display:flex">
                            <ul class="ingredientList">
                                <li class="ingredient">Price Per Serving: <span style="float:right">\{{(pricePerServing/100).toFixed(2)}}$</span></li>
                                <li class="ingredient">Preparation: <span style="float:right">\{{preparationMinutes}} min</span></li>
                                <li class="ingredient">Cooking: <span style="float:right">\{{cookingMinutes}} min</span></li>
                            </ul>
                            <ul class="ingredientList">
                                <li class="ingredient">Vegetarian: <span style="float:right">\{{yesOrNo(vegetarian)}}</span></li>
                                <li class="ingredient">Vegan: <span style="float:right">\{{yesOrNo(vegan)}}</span></li>
                                <li class="ingredient">Gluten Free: <span style="float:right">\{{yesOrNo(glutenFree)}}</span></li>
                                <li class="ingredient">Dairy Free: <span style="float:right">\{{yesOrNo(dairyFree)}}</span></li>
                                <li class="ingredient">Low Fodmap: <span style="float:right">\{{yesOrNo(lowFodmap)}}</span></li>
                                <li class="ingredient">Ketogenic: <span style="float:right">\{{yesOrNo(ketogenic)}}</span></li>
                                <li class="ingredient">Whole30: <span style="float:right">\{{yesOrNo(whole30)}}</span></li>
                            </ul>
                        </div>
                    </div>
                    <img class="recipeImg" :src="image" style=" width:500px; height:400px;">
                </div>

                <h2>Ingredients</h2>
                <div class="ingredientBlock">
                    <ul class="ingredientList">
                        <li v-for="ingredient in extendedIngredients" class="ingredient">
                            \{{ingredient.name}}
                            <div>
                                \{{ingredient.amount}} \{{ingredient.unit}}
                            </div>
                        </li>
                    </ul>
                    <div class="chartBlock">
                        <div id="chartContainer" style="height: 370px; max-width: 920px;"></div>
                    </div>
                </div>

                <h2>Steps</h2>
                <div class="stepBlock">
                    <ul class="ingredientList">
                        <li v-for="instruction in analyzedInstructions" class="ingredient">
                            \{{instruction.step}}
                        </li>
                    </ul>
                </div>


            </div>
        </div>
    </div>

    <script>
        $(document).ready(() => {
            const recipeComponent = new Vue({
                el: "#recipe",
                data: {
                    vegetarian: '',
                    vegan: '',
                    glutenFree: '',
                    dairyFree: '',
                    veryHealthy: '',
                    cheap: '',
                    veryPopular: '',
                    sustainable: '',
                    weightWatcherSmartPoints: '',
                    gaps: '',
                    lowFodmap: '',
                    ketogenic: '',
                    whole30: '',
                    preparationMinutes: '',
                    cookingMinutes: '',
                    sourceUrl: '',
                    spoonacularSourceUrl: '',
                    aggregateLikes: '',
                    spoonacularScore: '',
                    healthScore: '',
                    creditText: '',
                    sourceName: '',
                    pricePerServing: '',
                    extendedIngredients: [],
                    id: '',
                    title: '',
                    readyInMinutes: '',
                    servings: '',
                    image: '',
                    imageType: '',
                    cuisines: '',
                    dishTypes: '',
                    diets: '',
                    occasions: '',
                    winePairing: '',
                    instructions: '',
                    analyzedInstructions: [],
                    creditsText: '',
                },
                methods: {
                    yesOrNo: function(val) {
                        if (val) return "Yes";
                        return "No";
                    },

                    clearID: function(){
                        //clear cookie
                        document.cookie = id + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                    },
                },
                mounted: function () {
                    const username = Cookies.get('user');
                    //console.log(username);
                    const ingredientAmount = [];

                    $.ajax({
                        type: 'POST',
                        data: { user: username },
                        dataType: 'json',
                        success: (instructions) => {
                            //console.log(instructions); //api information
                            //console.log(Object.keys(instructions));

                            //console.log(instructions.vegetarian);
                            //console.log(this.vegetarian); //prints the data field in vue
                            this.vegetarian = instructions.vegetarian;
                            //console.log(this.vegetarian); //works
                            this.vegan = instructions.vegan;
                            this.glutenFree = instructions.glutenFree;
                            this.dairyFree = instructions.dairyFree;
                            this.veryHealthy = instructions.veryHealthy;
                            this.cheap = instructions.cheap;
                            this.veryPopular = instructions.veryPopular;
                            this.sustainable = instructions.sustainable;
                            this.weightWatcherSmartPoints = instructions.weightWatcherSmartPoints;
                            this.gaps = instructions.gaps;
                            this.lowFodmap = instructions.lowFodmap;
                            this.ketogenic = instructions.ketogenic;
                            this.whole30 = instructions.whole30;
                            this.preparationMinutes = instructions.preparationMinutes;
                            this.cookingMinutes = instructions.cookingMinutes;
                            this.sourceUrl = instructions.sourceUrl;
                            this.spoonacularSourceUrl = instructions.spoonacularSourceUrl;
                            this.aggregateLikes = instructions.aggregateLikes;
                            this.spoonacularScore = instructions.spoonacularScore;
                            this.healthScore = instructions.healthScore;
                            this.creditText = instructions.creditText;
                            this.sourceName = instructions.sourceName;
                            this.pricePerServing = instructions.pricePerServing;
                            //console.log(instructions.extendedIngredients);  //just to see the format
                            //also works
                            // for(i of instructions.extendedIngredients){
                            //     //console.log(i);
                            //     this.extendedIngredients.push(i);
                            // }
                            this.extendedIngredients = instructions.extendedIngredients;
                            //console.log(this.extendedIngredients); //looks good
                            this.id = instructions.id;
                            this.title = instructions.title;
                            this.readyInMinutes = instructions.readyInMinutes;
                            this.servings = instructions.servings;
                            this.image = instructions.image;
                            this.imageType = instructions.imageType;
                            this.cuisines = instructions.cuisines;
                            this.dishTypes = instructions.dishTypes;
                            this.diets = instructions.diets;
                            this.occasions = instructions.occasions;
                            this.winePairing = instructions.winePairing;
                            this.instructions = instructions.instructions;
                            //console.log(instructions.analyzedInstructions[0].steps);
                            if(instructions.analyzedInstructions[0] == undefined){
                                const recipeLink = instructions.spoonacularSourceUrl;
                                $(".ingredientList").html("<center><b>Instructions could not be loaded D:</b></br>Please check out "+ recipeLink.link(instructions.spoonacularSourceUrl) + " for more details</center>"); 
                                console.log("no instructions");
                            }
                            else{
                                for (i of instructions.analyzedInstructions[0].steps) {
                                    //this.analyzedInstructions = instructions.analyzedInstructions;
                                    //console.log(i)
                                    this.analyzedInstructions.push(i);
                                }
                                //this.analyzedInstructions = instructions.analyzedInstructions;
                                //console.log(this.analyzedInstructions);
                            }


                            //chart rendering
                            this.creditText = instructions.creditText;

                            for (i = 0; i < instructions.extendedIngredients.length; i++) {
                                ingredientAmount.push({ y: instructions.extendedIngredients[i].measures.metric.amount, label: instructions.extendedIngredients[i].name });
                            }
                            chart.render();

                        }
                    });


                    var chart = new CanvasJS.Chart("chartContainer", {
                        animationEnabled: true,
                        title: {
                            text: "Ingredients Percentage (g)",
                            horizontalAlign: "left"
                        },
                        data: [{
                            type: "doughnut",
                            startAngle: 60,
                            //innerRadius: 60,
                            indexLabelFontSize: 17,
                            indexLabel: "{label} - #percent%",
                            toolTipContent: "<b>{label}:</b> {y} (#percent%)",
                            dataPoints: ingredientAmount
                        }]
                    });
                }
            });
        })

    </script>

</body>

</html>