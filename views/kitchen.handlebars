<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Kitchen</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" media="screen" href="/css/style.min.css" />
    <script src="/js/jquery-3.3.1.min.js"></script>
    <script src="/js/js-cookie.js"></script>
    <script src="/js/kitchen.js"></script>
    <script src="/js/vue.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/simplebar@latest/dist/simplebar.css" />
    <script src="https://unpkg.com/simplebar@latest/dist/simplebar.js"></script>
</head>

<body>
    <header>
        <div id="brandBox">
            <img onclick="window.location='kitchen'" id="logo" src="/img/logo.png" alt="logo" style="width:30px;height:30px;display:none"
            />
            <p id="appName">
                <span style="color: #EA4622">This</span>
                <span style="color: #9fd8e2">is a</span>
                <span style="color: #F2847A">Pantry.</span>
            </p>
        </div>
        <div id="accountBox" onclick="window.location='account'">
            <p>Hello,
                <span id="accountBoxUserName">userName</span>
            </p>
            <img id="avatarImg" src="/img/avatar.png" alt="avatar" style="width:35px; height:35px" />
        </div>
    </header>

    <div class="content" id="app">
        <div class="wrapperPantry">
            <div class="block">
                <div id="fridge" class="pantryContainer">
                    <h1>Fridge</h1>
                    <ul v-if="checkFridge()" class="ingredientList">
                        <li v-for="ingredient in fridgeItems" class="ingredient" v-on:click="selectIngredient">
                            <div class="rowOne">
                                <p>
                                    <span class="ingredientName">\{{ingredient.name}}</span>
                                    <span class="ingredientHide">
                                        |
                                        <span class="ingredientCategory">\{{ingredient.category}}</span>
                                    </span>
                                </p>
                                <div>
                                    <button v-on:click="editIngredient" class="ingredientEditBtn">Edit</button>
                                    <button v-on:click="removeIngredient(ingredient)" class="ingredientDeleteBtn">x</button>
                                </div>
                            </div>
                            <p class="ingredientNote">\{{ingredient.note}}</p>
                        </li>
                    </ul>
                    <ul v-else class="ingredientList">
                        <p class="emptyText">Oops! Nothing is in your Fridge D:</p>
                    </ul>
                </div>
            </div>
            <div class="block">
                <div id="stove" class="pantryContainer">
                    <h1>Stove</h1>
                    <button id="make_meal" onclick="window.location='recipeList'">Make a Meal!</button>
                </div>
            </div>
            <div class="block">
                <div id="spiceRack" class="pantryContainer">
                    <h1>Spice Rack</h1>
                    <ul v-if="checkSpiceRack()" class="ingredientList">
                        <li v-for="ingredient in spiceRackItems" class="ingredient" v-on:click="selectIngredient">
                            <div class="rowOne">
                                <p>
                                    <span class="ingredientName">\{{ingredient.name}}</span>
                                    <span class="ingredientHide">
                                        <span class="ingredientCategory">\{{ingredient.category}}</span>
                                    </span>
                                </p>
                                <div>
                                    <button v-on:click="editIngredient" class="ingredientEditBtn">Edit</button>
                                    <button v-on:click="removeIngredient(ingredient)" class="ingredientDeleteBtn">x</button>
                                </div>
                            </div>
                            <p class="ingredientNote">\{{ingredient.note}}</p>
                        </li>
                    </ul>
                    <ul v-else class="ingredientList">
                        <p class="emptyText">Oops! Nothing is in your Spice Rack D:</p>
                    </ul>
                </div>

                <div id="cupboard" class="pantryContainer">
                    <h1>Cupboard</h1>
                    <ul v-if="checkCupboard()" class="ingredientList">
                        <li v-for="ingredient in cupboardItems" class="ingredient" v-on:click="selectIngredient">
                            <div class="rowOne">
                                <p>
                                    <span class="ingredientName">\{{ingredient.name}}</span>
                                    <span class="ingredientHide">
                                        |
                                        <span class="ingredientCategory">\{{ingredient.category}}</span>
                                    </span>
                                </p>
                                <div>
                                    <button v-on:click="editIngredient" class="ingredientEditBtn">Edit</button>
                                    <button v-on:click="removeIngredient(ingredient)" class="ingredientDeleteBtn">x</button>
                                </div>
                            </div>
                            <p class="ingredientNote">\{{ingredient.note}}</p>
                        </li>
                    </ul>
                    <ul v-else class="ingredientList">
                        <p class="emptyText">Oops! Nothing is in your Cupboard D:</p>
                    </ul>
                </div>
            </div>
        </div>
        <button id="addIngredientBtn" v-on:click="openAddModal">Add ingredient!</button>

        <div id="addIngredientModal" class="modal is-hidden is-visuallyHidden">
            <div class="modal-content">
                <span id="closeModal" class="Close" v-on:click="closeModal">&times;</span>
                <div id="addIngredientModalContent">
                    <h1 v-if="edit">Edit Ingredient</h1>
                    <h1 v-else>Add Ingredient</h1>
                    <h3>Name</h3>
                    <input type="text" id="ingredientNameInput" placeholder="Pork, Lettuce, Milk..." v-model="newName" />
                    <h3>Category</h3>
                    <select id="ingredientCategorySelect" v-model="newCategory">
                        <option disabled selected value style="display:none"> - select an option - </option>
                        <option disabled>-Fridge-</option>
                        <option value="Meat">Meat</option>
                        <option value="Vegetable">Vegetable</option>
                        <option value="Diary">Diary</option>
                        <option value="Fruit">Fruit</option>
                        <option value="Drinks">Drinks</option>
                        <option disabled>-Spice Rack-</option>
                        <option value="Oil">Oil</option>
                        <option value="Sauce">Sauce</option>
                        <option value="Spice">Spice</option>
                        <option disabled>-Cupboard-</option>
                        <option value="Grain">Grain</option>
                        <option value="Misc">Miscellaneous</option>
                    </select>

                    <h3>Note</h3>
                    <textarea id="ingredientNoteTextarea" placeholder="Any notes..." v-model="newNote"></textarea>

                    <button v-if="edit" id="addIngredientToBtn" v-on:click="addIngredient(newName, newCategory, newNote)">Done!</button>
                    <button v-else id="addIngredientToBtn" v-on:click="addIngredient(newName, newCategory, newNote)">Add!</button>

                </div>
            </div>
        </div>
    </div>
    <script>
    $(document).ready(() => {
        console.log("hello");
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: '/js/kitchen.js',
            //data: ingredients,
            success: (ingredients, status) => {                
                console.log(status);
                //this.ingredients.push({ name: newName, category: newCategory, note: newNote });
             }
        });
    });

    window.onload = () => {

        function openModal(e) {
            console.log("Open Modal");
            $("#addIngredientModal").attr("class", "modal is-visuallyHidden");
            setTimeout(function () {
                $("header,.wrapperPantry, #addIngredientBtn").addClass("is-blurred");
                $("#addIngredientModal").attr("class", "modal");
            }, 100);
        }

        function closeModal(e) {
            console.log("Close Modal");
            $("#addIngredientModal").attr("class", "modal is-hidden is-visuallyHidden");
            $("header,.wrapperPantry, #addIngredientBtn").removeClass("is-blurred");
            $(".modal-content").display = "none";
        }

        $(window).on('click', (e) => {
                    if (e.target == $('#addIngredientModal')[0]) {
                        if (this.edit) this.edit = false;
                        closeModal();
                    }
                });

        const pantryComponent = new Vue({
            el: "#app",
            data: {
                newName: '',
                newCategory: '',
                newNote: '',
                ingredients: [],
                fridgeCategories: ["Meat", "Vegetable", "Diary", "Fruit", "Drinks"],
                spiceRackCategories: ["Spice", "Oil", "Sauce"],
                cupboardCategories: ["Grain", "Misc"],
                selectedIngredientName: '',
                selectedIngredientCategory: '',
                selectedIngredientNote: '',
                selectedIngredientTarget: null,
                edit: false
            },
            computed: {
                fridgeItems() {
                    return this.ingredients.filter(ingredient => {
                        return this.fridgeCategories.includes(ingredient.category);
                    })
                },
                spiceRackItems() {
                    return this.ingredients.filter(ingredient => {
                        return this.spiceRackCategories.includes(ingredient.category);
                    })
                },
                cupboardItems() {
                    return this.ingredients.filter(ingredient => {
                        return this.cupboardCategories.includes(ingredient.category);
                    })
                }
            },
            methods: {
                addIngredient: function (newName, newCategory, newNote) {
                    if (this.edit) {
                        this.edit = false;
                        console.log("Editing from " + JSON.stringify({ name: this.selectedIngredientName, category: this.selectedIngredientCategory, note: this.selectedIngredientNote }));
                        $(this.selectedIngredientTarget).closest("li").find(".ingredientName").text(newName);
                        $(this.selectedIngredientTarget).closest("li").find(".ingredientCategory").text(newCategory);
                        $(this.selectedIngredientTarget).closest("li").find(".ingredientNote").text(newNote);
                        this.selectedIngredientName = newName;
                        this.selectedIngredientCategory = newCategory;
                        this.selectedIngredientNote = newNote;
                        console.log("Editing to " + JSON.stringify({ name: newName, category: newCategory, note: newNote }));
                    } else {
                        console.log("Adding " + JSON.stringify({ name: newName, category: newCategory, note: newNote }));
                        this.ingredients.push({ name: newName, category: newCategory, note: newNote });
                        //console.log(newName); //add this to the dataBase
                        //console.log(typeof(newName)); //is a string
                        const newestIngredients = { name: newName, category: newCategory, note: newNote };
                        //let username = localStorage.getItem("username");
                        const username = Cookies.get('user');
                        console.log(this.ingredients);
                        $.ajax({
                            type: 'POST',
                            dataType: 'json',
                            data: newestIngredients
                        });
                        //Belongs in the fridge
                        // IDK what this does, Luke wrote it, Below 'if' statement commented out
                        // so that modal closes successfully
                       //  if(this.fridgeCategories.includes(newCategory)){
                       //      console.log("we in da fridge");
                       //      let user = $.ajax({
                       //          type: {
                       //              'GET': 'recipes.db'.run(
                       //                  'SELECT DISTINCT username FROM users',
                       //                  {
                       //                      $user: username,
                       //                  }
                       //                  /*(err) => {
                       //                      if (err) {
                       //                          console.log("There was an error finding the user");
                       //                      } else {
                       //                          console.log("User: "  username);
                       //                      }
                       //                  }*/
                       //
                       //                  /*'INSERT INTO ingredients VALUES ($username, $fridge)',
                       //                      {
                       //                          fridge_list: newName,
                       //                          $user: username,
                       //                      }
                       //                      (err) => {
                       //                          if (err) {
                       //                              console.log("There was an error inserting ingredients")
                       //                          } else {
                       //                              console.log("Successfully inserted " + newName + " into the fridge for " +  username);
                       //                          }
                       //                      }*/
                       //                  )
                       //              },
                       //      });
                       // }
                    }

                    this.newName = "";
                    this.newCategory = "";
                    this.newNote = "";
                    closeModal();
                },
                removeIngredient: function (ingredient) {
                    console.log("Ingredients before" + JSON.stringify(this.ingredients));

                    for (i = 0; i < this.ingredients.length; i++) {
                        if (ingredient.name === this.ingredients[i].name) {
                            console.log("Removing " + JSON.stringify(ingredient));
                            this.ingredients.splice(i, 1);
                        }
                    }
                    console.log("Ingredients after" + JSON.stringify(this.ingredients));

                },
                checkFridge: function () {
                    for (i = 0; i < this.ingredients.length; i++)
                        if (this.fridgeCategories.includes(this.ingredients[i].category))
                            return true;
                    return false;
                },
                checkSpiceRack: function () {
                    for (i = 0; i < this.ingredients.length; i++)
                        if (this.spiceRackCategories.includes(this.ingredients[i].category))
                            return true;
                    return false;
                },
                checkCupboard: function () {
                    for (i = 0; i < this.ingredients.length; i++)
                        if (this.cupboardCategories.includes(this.ingredients[i].category))
                            return true;
                    return false;
                },
                selectIngredient: function (e) {

                    this.selectedIngredientTarget = e.target;
                    this.selectedIngredientName = $(e.target).closest('li').find(".ingredientName").text();
                    this.selectedIngredientCategory = $(e.target).closest('li').find(".ingredientCategory").text();
                    this.selectedIngredientNote = $(e.target).closest('li').find(".ingredientNote").text();

                    console.log("Selecting " + JSON.stringify({ name: this.selectedIngredientName, category: this.selectedIngredientCategory, note: this.selectedIngredientNote }));
                    if ($(e.target).closest('li').hasClass("selected")) {
                        $(e.target).closest('li').removeClass("selected");
                        $(e.target).closest('li').addClass("ingredient");
                    } else {
                        $(e.target).closest('li').removeClass("ingredient");
                        $(e.target).closest('li').addClass("selected");
                    }
                },
                editIngredient: function (e) {
                    openModal();
                    this.edit = true;
                    this.selectedIngredientTarget = e.target;
                    this.selectedIngredientName = $(e.target).closest('li').find(".ingredientName").text();
                    this.selectedIngredientCategory = $(e.target).closest('li').find(".ingredientCategory").text();
                    this.selectedIngredientNote = $(e.target).closest('li').find(".ingredientNote").text();
                    console.log("Editing " + JSON.stringify({ name: this.selectedIngredientName, category: this.selectedIngredientCategory, note: this.selectedIngredientNote }));
                    this.newName = this.selectedIngredientName;
                    this.newCategory = this.selectedIngredientCategory;
                    this.newNote = this.selectedIngredientNote;
                    e.stopPropagation();
                },
                openAddModal: function (e) {
                    this.newName = "";
                    this.newCategory = "";
                    this.newNote = "";
                    openModal();
                },
                closeModal: function(e) {
                    closeModal();
                }
            },
           /* mounted: function () {

                this.ingredients = [
                    {
                        name: "Pork Belly",
                        category: "Meat",
                        note: "2 pounds"
                    }, {
                        name: "Lettuce",
                        category: "Vegetable",
                        note: "1 pack"
                    }, {
                        name: "Salt",
                        category: "Spice",
                        note: "Sea Salt"
                    }, {
                        name: "Rice",
                        category: "Grain",
                        note: "Never buy this brand again"
                    }, {
                        name: "Beef Sirloin",
                        category: "Meat",
                        note: "1 pound from Ralphs"
                    }, {
                        name: "Soy Sauce",
                        category: "Sauce",
                        note: "1 bottle"
                    }
                ];
            }*/
        });
    }
    </script>
</body>

</html>
